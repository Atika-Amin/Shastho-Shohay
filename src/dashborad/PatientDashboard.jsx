// src/dashborad/PatientDashboard.jsx
import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";

export default function PatientDashboard() {
  const navigate = useNavigate();
  const [chatOpen, setChatOpen] = useState(false);

  // NEW: avatar + name
  const [avatarUrl, setAvatarUrl] = useState("");
  const [displayName, setDisplayName] = useState("");

  useEffect(() => {
    // read from either localStorage or sessionStorage (depending on "remember me")
    const rawAuth =
      localStorage.getItem("auth") || sessionStorage.getItem("auth");
    const parsed = rawAuth ? JSON.parse(rawAuth) : null;
    const token = localStorage.getItem("token") || parsed?.token || "";

    // set a fallback name from auth payload if present
    if (parsed?.user?.name) setDisplayName(parsed.user.name);

    if (!token) return; // not logged in ‚Äì keep defaults

    (async () => {
      try {
        const res = await fetch("/api/patient/me", {
          headers: { Authorization: `Bearer ${token}` },
        });
        if (!res.ok) return; // ignore errors, keep defaults
        const data = await res.json();
        setAvatarUrl(data?.profile?.avatar_url || "");
        if (data?.profile?.name) setDisplayName(data.profile.name);
      } catch {
        // ignore network errors ‚Äì keep defaults
      }
    })();
  }, []);

  const avatarSrc = avatarUrl || "/image/avatar-patient.png";

  // NEW: logout handler
  const handleLogout = () => {
    try {
      localStorage.removeItem("auth");
      localStorage.removeItem("token");
      sessionStorage.removeItem("auth");
      sessionStorage.removeItem("token");
    } catch {}
    navigate("/", { replace: true }); // go to Landing Page
  };

  return (
    <div className="font-sans text-gray-800 bg-gradient-to-r from-[#1878A9] via-[#306C8E] via-[#005076] to-[#6B92A4]">
      {/* Top Bar */}
      <header className="sticky top-0 z-40 bg-gradient-to-r from-[#1878A9] via-[#306C8E] via-[#005076] to-[#6B92A4] text-white">
        <div className="mx-auto max-w-8xl px-24 h-16 flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <img
              src="/image/logo1.png"
              alt="‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶∏‡¶π‡¶æ‡ßü"
              className="h-10 w-9"
            />
            <span className="font-bold text-3xl">‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶∏‡¶π‡¶æ‡ßü</span>
          </div>
          <div className="flex items-center gap-4">
            <button
              className="relative p-2 rounded-full hover:bg-white/10"
              aria-label="Notifications"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="w-6 h-6"
                fill="currentColor"
                viewBox="0 0 24 24"
              >
                <path d="M12 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 006 14h12a1 1 0 00.707-1.707L18 11.586V8a6 6 0 00-6-6z" />
                <path d="M8 15a4 4 0 008 0H8z" />
              </svg>
              <span className="absolute -top-0.5 -right-0.5 px-1.5 py-0.5 text-[10px] font-medium bg-red-600 text-white rounded-full">
                3
              </span>
            </button>

            {/* Logout (icon button) */}
            <button
              onClick={handleLogout}
              className="p-2 rounded-full hover:bg-white/10"
              aria-label="‡¶≤‡¶ó ‡¶Ü‡¶â‡¶ü"
              title="‡¶≤‡¶ó ‡¶Ü‡¶â‡¶ü"
            >
              {/* lucide 'log-out' style SVG */}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="w-6 h-6"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
              >
                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" />
                <polyline points="16 17 21 12 16 7" />
                <line x1="21" y1="12" x2="9" y2="12" />
              </svg>
            </button>

            {/* UPDATED: profile icon uses fetched avatar_url */}
            <div
              role="button"
              tabIndex={0}
              onClick={() =>
                navigate("/patientprofile", {
                  state: { from: "/PatientDashboard" },
                })
              }
              onKeyDown={(e) =>
                e.key === "Enter" &&
                navigate("/patientprofile", {
                  state: { from: "/PatientDashboard" },
                })
              }
              className="w-9 h-9 rounded-full ring-2 ring-blue-400 overflow-hidden cursor-pointer"
              title={displayName || "‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤"}
            >
              <img
                className="w-9 h-9 object-cover"
                src={avatarSrc}
                alt="profile"
                referrerPolicy="no-referrer"
              />
            </div>
          </div>
        </div>
      </header>

      {/* Content */}
      {/* FULL-WIDTH OUTER BOX */}
      <div className="w-full bg-[#E6EAEE]/70 py-3 md:py-4">
        {/* Centered container for the inner card */}
        <div className="flex-1 mx-auto max-w-8xl px-24">
          {/* Inner card */}
          <section className="rounded-3xl px-6 py-8 md:px-10 md:py-10 text-white bg-[#0E5F85] ring-1 ring-white/10 text-center shadow-xl">
            <h1 className="text-4xl md:text-4xl font-extrabold leading-tight">
              ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶∏‡¶π‡¶æ‡ßü‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ, ‡¶π‡¶æ‡¶Æ‡¶ø‡¶Æ{" "}
              <span className="align-middle">üëã</span>
            </h1>
            <p className="mt-2 text-md text-white/90">
              ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶ú‡¶ï‡ßá ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?
            </p>

            <div className="mt-6 flex flex-wrap justify-center gap-10">
              <button
                onClick={() => setChatOpen(true)}
                className="px-10 py-4 text-lg rounded-2xl bg-[#0B3D56] hover:bg-[#082e41] shadow-md"
              >
                AI ‡¶â‡¶™‡¶∏‡¶∞‡ßç‡¶ó ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ
              </button>
              <button
                onClick={() => navigate("/doctors")}
                className="px-10 py-4  text-lg rounded-2xl bg-[#1E7AF2] hover:bg-[#1667cf] shadow-md"
              >
                ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®
              </button>
              <button
                onClick={() => navigate("/emergency")}
                className="px-10 py-4 text-lg rounded-2xl bg-[#E0312D] hover:bg-[#c02825] shadow-md"
              >
                ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø‡¶§‡¶æ
              </button>
            </div>
          </section>
        </div>
      </div>

      <main className="flex-1 mx-auto max-w-8xl px-24 py-6">
        {/* Welcome / CTA panel */}
        {/* FULL-WIDTH OUTER BOX (band) */}

        {/* Quick stats */}
        <section className="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
          {[
            { label: "‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶®", value: "02" },
            { label: "‡¶¨‡ßÅ‡¶ï‡¶° ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü", value: "01" },
            { label: "‡¶∂‡ßá‡¶∑ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ", value: "‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á ‡ß®‡ß¶‡ß®‡ß´" },
            { label: "‡¶¨‡¶ø‡¶Æ‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏", value: "‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º" },
          ].map((k, i) => (
            <div
              key={i}
              className="bg-[#CAD3D2] rounded-2xl p-5 text-center shadow ring-1 ring-black/5"
            >
              <div className="text-[#2C4D5F] text-sm">{k.label}</div>
              <div className="text-2xl font-extrabold mt-1 text-[#0E5F85]">
                {k.value}
              </div>
            </div>
          ))}
        </section>

        {/* Symptom checker (full width like mockup) */}
        <section className="mt-6">
          <div className="bg-[#CAD3D2] rounded-3xl p-5 md:p-6 shadow ring-1 ring-black/5">
            <div className="flex items-center justify-between">
              <h3 className="text-xl font-bold text-[#0E5F85]">
                AI ‡¶â‡¶™‡¶∏‡¶∞‡ßç‡¶ó ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ
              </h3>
              <button className="text-sm px-4 py-1.5 rounded-full bg-white text-[#0E5F85] ring-1 ring-[#0E5F85]/20 hover:bg-[#eef6fb]">
                ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏
              </button>
            </div>

            <div className="mt-4 flex flex-col sm:flex-row gap-3">
              <input
                className="flex-1 h-14 rounded-2xl border border-[#0E5F85] bg-white px-4 focus:outline-none focus:ring-2 focus:ring-[#0E5F85]"
                placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶â‡¶™‡¶∏‡¶∞‡ßç‡¶ó ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶¨‡ßÅ‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶•‡¶æ, ‡¶Æ‡¶æ‡¶•‡¶æ ‡¶ò‡ßã‡¶∞‡¶æ)"
                aria-label="‡¶â‡¶™‡¶∏‡¶∞‡ßç‡¶ó"
              />
              <div className="flex gap-3">
                <button
                  onClick={() => setChatOpen(true)}
                  className="px-5 h-14 rounded-2xl bg-[#0B3D56] text-white hover:bg-[#082e41]"
                >
                  ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            </div>

            <div className="mt-5 text-sm text-[#2C4D5F]">
              <p className="font-semibold">‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞‡¶ø ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü (‡¶°‡ßá‡¶Æ‡ßã):</p>
              <ul className="list-disc list-inside mt-2 space-y-1">
                <li>‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø ‡¶∞‡ßã‡¶ó: ‡¶è‡¶û‡ßç‡¶ú‡¶æ‡¶á‡¶®‡¶æ / ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡¶ø‡¶°‡¶ø‡¶ü‡¶ø</li>
                <li>‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡¶æ‡¶¨‡¶ø‡¶§: ‡¶á‡¶∏‡¶ø‡¶ú‡¶ø ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‚Ä¢ ‡¶™‡¶æ‡¶®‡¶ø ‡¶™‡¶æ‡¶® ‚Ä¢ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∏ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã</li>
                <li>‡¶®‡¶ø‡¶ï‡¶ü‡¶∏‡ßç‡¶• ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û: ‡¶ï‡¶æ‡¶∞‡ßç‡¶°‡¶ø‡¶ì‡¶≤‡¶ú‡¶ø‡¶∏‡ßç‡¶ü (‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®)</li>
              </ul>
            </div>
          </div>
        </section>

        {/* Doctor search + Prescription */}
        <section className="mt-6 grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Doctor search (left column in mockup) */}
          <div className="bg-[#CAD3D2] rounded-3xl p-5 shadow ring-1 ring-black/5">
            <div className="flex items-center justify-between">
              <h3 className="text-lg font-bold text-[#0E5F85]">
                ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®
              </h3>
              <div className="flex items-center gap-2">
                <span className="text-sm text-[#2C4D5F]">‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™</span>
                <button
                  onClick={() => navigate("/doctors/map")}
                  className="px-3 py-1 rounded-full bg-[#EBEFF2] hover:bg-[#E1E7EC]"
                >
                  ‡¶Ø‡¶æ‡¶®
                </button>
              </div>
            </div>

            <div className="mt-3 flex gap-2">
              <input
                className="flex-1 rounded-xl border border-[#0E5F85] bg-[#F8FAFB] px-3 py-2 focus:outline-none focus:ring-2 focus:ring-[#306C8E]"
                placeholder="‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û / ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ"
              />
              <button className="px-4 py-2 rounded-xl bg-[#1E7AF2] text-white hover:bg-[#1667cf]">
                ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®
              </button>
            </div>

            <ul className="mt-4 space-y-3 text-sm">
              {/* Card 1 */}
              <li className="p-3 rounded-2xl border border-[#0E5F85] bg-[#F8FAFB] hover:bg-white transition">
                <div className="flex items-center gap-3">
                  <img
                    src="/image/doc1.png"
                    className="w-10 h-10 rounded-full object-cover"
                    alt=""
                  />
                  <div className="flex-1">
                    <div className="font-semibold">
                      ‡¶°‡¶æ. ‡¶®‡ßÅ‡¶∏‡¶∞‡¶æ‡¶§ ‡¶ú‡¶æ‡¶π‡¶æ‡¶® ‚Ä¢ ‡¶®‡¶ø‡¶â‡¶∞‡ßã‡¶≤‡¶ú‡¶ø
                    </div>
                    <div className="text-[#2C4D5F]">
                      ‡¶¨‡¶ø‡¶™‡¶ø ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‚Ä¢ ‡ßß.‡ß™ ‡¶ï‡¶ø‡¶Æ‡¶ø ‚Ä¢ ‚≠ê 4.8
                    </div>
                  </div>
                </div>
              </li>
              {/* Card 2 */}
              <li className="p-3 rounded-2xl border border-[#0E5F85] bg-[#F8FAFB] hover:bg-white transition">
                <div className="flex items-center gap-3">
                  <img
                    src="/image/doc2.png"
                    className="w-10 h-10 rounded-full object-cover"
                    alt=""
                  />
                  <div className="flex-1">
                    <div className="font-semibold">
                      ‡¶°‡¶æ. ‡¶§‡¶æ‡¶®‡¶≠‡ßÄ‡¶∞ ‡¶π‡¶æ‡¶∏‡¶æ‡¶® ‚Ä¢ ‡¶Æ‡ßá‡¶°‡¶ø‡¶∏‡¶ø‡¶®
                    </div>
                    <div className="text-[#2C4D5F]">
                      ‡¶∏‡ßç‡¶ï‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‚Ä¢ ‡ß®.‡ßß ‡¶ï‡¶ø‡¶Æ‡¶ø ‚Ä¢ ‚≠ê 4.6
                    </div>
                  </div>
                </div>
              </li>
            </ul>
          </div>

          {/* Prescription + medicines (right column in mockup) */}
          <div className="bg-[#CAD3D2] rounded-3xl p-5 shadow ring-1 ring-black/5">
            <div className="flex items-center justify-between">
              <h3 className="text-lg font-bold text-[#0E5F85]">
                ‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶ì ‡¶ì‡¶∑‡ßÅ‡¶ß
              </h3>
              <button className="text-sm px-3 py-1 rounded-full bg-[#EBEFF2] hover:bg-[#E1E7EC]">
                ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏
              </button>
            </div>

            <div className="mt-3 grid grid-cols-1 sm:grid-cols-3 gap-3">
              <label className="sm:col-span-2 border-2 border-dashed rounded-2xl p-4 text-sm text-center cursor-pointer hover:bg-[#F8FAFB]">
                <input type="file" className="hidden" />
                <div className="font-medium">‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®</div>
                <div className="text-[#2C4D5F]">‡¶õ‡¶¨‡¶ø / PDF</div>
              </label>
              <button className="px-4 py-2 rounded-xl bg-[#0B3D56] text-white hover:bg-[#082e41]">
                ‡¶¶‡¶æ‡¶Æ ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ
              </button>
            </div>

            <div className="mt-4 text-sm text-[#2C4D5F] grid grid-cols-1 md:grid-cols-2 gap-3">
              <div className="p-3 rounded-2xl border bg-[#F2F6F8]">
                <div className="font-semibold">Omeprazole 20mg</div>
                <div>‡¶¨‡¶ø‡¶ï‡¶≤‡ßç‡¶™: Omez, Ocid, Omidon</div>
                <div>‡¶¶‡¶æ‡¶Æ: ‡ß≥‡ß¨‚Äì‡ß≥‡ßß‡ß® ‚Ä¢ ‡¶®‡¶ø‡¶ï‡¶ü‡¶∏‡ßç‡¶• ‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∏‡¶ø: ‡ß¶.‡ßÆ ‡¶ï‡¶ø‡¶Æ‡¶ø</div>
              </div>
              <div className="p-3 rounded-2xl border bg-[#F2F6F8]">
                <div className="font-semibold">Atorvastatin 10mg</div>
                <div>‡¶¨‡¶ø‡¶ï‡¶≤‡ßç‡¶™: Lipitor, Atorva</div>
                <div>‡¶¶‡¶æ‡¶Æ: ‡ß≥‡ßß‡ß®‚Äì‡ß≥‡ß®‡ß® ‚Ä¢ ‡¶®‡¶ø‡¶ï‡¶ü‡¶∏‡ßç‡¶• ‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∏‡¶ø: ‡ßß.‡ß® ‡¶ï‡¶ø‡¶Æ‡¶ø</div>
              </div>
            </div>
          </div>
        </section>

        {/* Bottom row: Records / Tips / Activity */}
        <section className="mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Medical records */}
          <div className="bg-[#CAD3D2] rounded-3xl p-5 shadow ring-1 ring-black/5">
            <h3 className="text-lg font-bold text-[#0E5F85]">
              ‡¶Æ‡ßá‡¶°‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡¶∏
            </h3>
            <ul className="mt-3 space-y-3 text-sm">
              {[
                { t: "‡¶∞‡¶ï‡ßç‡¶§ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü", d: "‡ßß‡ß® ‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á ‡ß®‡ß¶‡ß®‡ß´" },
                { t: "‡¶á‡¶Æ‡ßá‡¶ú‡¶ø‡¶Ç ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü", d: "‡ß¶‡ß® ‡¶ú‡ßÅ‡¶® ‡ß®‡ß¶‡ß®‡ß´" },
              ].map((r, i) => (
                <li
                  key={i}
                  className="p-3 rounded-2xl border bg-[#F8FAFB] flex items-center justify-between"
                >
                  <div>
                    <div className="font-medium">{r.t}</div>
                    <div className="text-[#2C4D5F]">{r.d}</div>
                  </div>
                  <button
                    className="p-2 rounded-xl bg-white ring-1 ring-black/10 hover:bg-[#EEF4F8]"
                    title="Download"
                  >
                    ‚¨á
                  </button>
                </li>
              ))}
            </ul>
            <button className="mt-3 px-4 py-2 rounded-xl bg-[#0B3D56] text-white hover:bg-[#082e41]">
              ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
            </button>
          </div>

          {/* Health tips */}
          <div className="bg-[#CAD3D2] rounded-3xl p-5 shadow ring-1 ring-black/5">
            <h3 className="text-lg font-bold text-[#0E5F85]">‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶ü‡¶ø‡¶™‡¶∏</h3>
            <ul className="mt-3 list-disc list-inside text-sm text-[#2C4D5F] space-y-1">
              <li>‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶Ö‡¶®‡ßç‡¶§‡¶§ ‡ßÆ ‡¶ó‡ßç‡¶≤‡¶æ‡¶∏ ‡¶™‡¶æ‡¶®‡¶ø ‡¶™‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</li>
              <li>‡¶¶‡¶ø‡¶®‡ßá ‡ßß‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶π‡¶æ‡¶Å‡¶ü‡¶æ ‡¶¨‡¶æ ‡¶π‡¶æ‡¶≤‡¶ï‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</li>
              <li>‡¶´‡¶≤-‡¶∏‡¶¨‡¶ú‡¶ø ‡¶¨‡ßá‡¶∂‡¶ø ‡¶ñ‡¶æ‡¶®, ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ‡¶ú‡¶æ‡¶§ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶®‡•§</li>
              <li>‡¶∞‡¶æ‡¶§‡ßá ‡ß≠‚Äì‡ßÆ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ ‡¶ò‡ßÅ‡¶Æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</li>
            </ul>
          </div>

          {/* Recent activity */}
          <div className="bg-[#CAD3D2] rounded-3xl p-5 shadow ring-1 ring-black/5">
            <h3 className="text-lg font-bold text-[#0E5F85]">
              ‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶≤‡¶æ‡¶™
            </h3>
            <ul className="mt-3 text-sm text-[#2C4D5F] space-y-3">
              <li className="p-3 rounded-2xl border bg-[#F8FAFB]">
                ‡¶°‡¶æ. ‡¶∞‡¶æ‡¶á‡¶Æ‡ßá‡¶®-‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‚Ä¢ ‡ß¶‡ß© ‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü ‡ß®‡ß¶‡ß®‡ß´ ‚Ä¢
                ‡ß¶‡ß´:‡ß©‡ß¶ AM
              </li>
              <li className="p-3 rounded-2xl border bg-[#F8FAFB]">
                ‡¶™‡ßç‡¶∞‡ßá‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶® ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‚Ä¢ ‡ß®‡ßÆ ‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü ‡ß®‡ß¶‡ß®‡ß´ ‚Ä¢ ‡ß¶‡ß´:‡ß®‡ß¶ PM
              </li>
            </ul>
          </div>
        </section>
      </main>

      {/* Footer */}
      <footer className="bg-[#0B3D56] text-white text-center text-sm py-4 px-4">
        ¬© ‡ß®‡ß¶‡ß®‡ß´ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶∏‡¶π‡¶æ‡ßü ‚Äî ‡¶∏‡¶¨ ‡¶§‡¶•‡ßç‡¶Ø ‡¶ï‡ßá‡¶¨‡¶≤ ‡¶∏‡¶π‡¶æ‡ßü‡¶ï‡•§ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶ø‡¶§
        ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶ï‡ßá‡¶∞ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂ ‡¶®‡¶ø‡¶®‡•§
      </footer>

      {/* Floating emergency button */}
      <button
        onClick={() => navigate("/emergency")}
        className="fixed bottom-6 right-6 shadow-xl rounded-full px-5 py-3 bg-[#E0312D] text-white font-semibold hover:bg-[#c02825]"
        aria-label="‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø"
      >
        üö® ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø‡¶§‡¶æ
      </button>

      {/* Chat drawer (optional)
      <AISuggestionChat
        open={chatOpen}
        onClose={() => setChatOpen(false)}
        onMinimize={() => setChatOpen(false)}
      /> */}
    </div>
  );
}
